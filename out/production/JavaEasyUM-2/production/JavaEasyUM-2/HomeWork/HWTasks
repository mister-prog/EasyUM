13-02-2020: Урок 4. Домашка 4

-------- Угадай мой номер --------
1. Комп генерит число, пользователь должен угадать
2. пользователь вводит число, комп подсказывает, больше/меньше
3. когда пользователь угадывает, комп поздравляет его

-------- Квадратное уравнение --------
// a * x^2 + b * x + с == 0
// Дискриминант
//D = b^2 - 4 * a * c
//
// Вар-ты:
// --- D > 0, два корня ---
// x1 = -b + sqrt(b^2 - 4 * a * c) / 2 * a
// x2 = -b - sqrt(b^2 - 4 * a * c) / 2 * a
//
// --- D == 0, один корень ---
//x1 = x2 = -(b / 2 * a)
//
// --- D < 0, нет действит. значений ---

------------ Множества --------------
1. Создать два множества
2. проверить, возможно ли их существование
3. сравнить, ответить
- вкл/не вкл
- пересекаются/не пересекаются

//проверка вхождения
//        int i = 0;
//        //если min1 < min2 && max1 > max2 - range1 вкл range2
//        //если min1 == min2 && max1 > max2 - range1 вкл range2
//        //если min1 < min2 && max1 == max2 - range1 вкл range2
//
//        //если min1 > min2 && max1 < max2 - range2 вкл range1
//        //если min1 == min2 && max1 < max2 - range2 вкл range1
//        //если min1 > min2 && max1 == max2 - range2 вкл range1
//
//        //если min1 == min2 && max1 == max2 - интервалы идентичны
//
//        //Пересекает
//        //если min1 > min2 && max1 > max2 - пересекаются
//        //если min1 < min2 && max1 < max2 - пересекаются
//
//        //Не пересекает
//        //если max2 < min1 || min2 > max1 - не пересекаются
//
//   если (max2 < min1 || max1 < min2)
//   {
//        не пересекаются
//   }
//   else
//   {
//       если (min1 < min2)
//        {
//            если (max1 >= max2) - range1 содержит range2
//            если (max1 < max2) - пересекаются
//        }
//        если (min1 > min2)
//        {
//            если (max1 <= max2) - range2 содержит range1
//            если (max1 > max2) - пересекаются
//        }
//        если (min1 == min2)
//        {
//           если (max1 > max2) - range1 содержит range2
//           если (max1 < max2) - range 2 содержит range1
//           если (max1 == max2) - идентичны
//        }
//     }


//--------------------------------------------------------------


    static void arraysEqualElems() {
        System.out.println("Введите два массива");

        int[] arr1 = inputArr();
        System.out.print("Вы ввели первый массив " + Arrays.toString(arr1) + "\n");

        int[] arr2 = inputArr();
        System.out.print("Вы ввели второй массив " + Arrays.toString(arr2) + "\n");

        /* System.out.print("Общие элементы массивов " + Arrays.toString(arr1) + " и " + Arrays.toString(arr2) + ":\n" + Arrays.toString(equalElems(arr1, arr2)));*/
        equalElems(arr1, arr2);
    }

    static void equalElems(int[] arr1, int[] arr2) {
        int counter;
        if (arr1.length >= arr2.length) {
            findUniques(arr1, arr2);
        } else {
            findUniques(arr2, arr1);
        }
    }

    static void findUniques(int[] arr1, int[] arr2) {
        int counter = 0;

        for (int i = 0; i < arr1.length; i++) {
            for (int j = 0; j < arr2.length; j++) {
                if (arr1[i] == arr2[j]) {
                    counter++;
                }
            }
        }

        //todo придумать, как упростить метод: сначала - считаем одинаковые, затем - создаем массив, сохраняя одинаковые

        int[] midArr = new int[counter];
        int h = 0;

        //todo сделать проверку на уникальность
        System.out.println("counter = " + counter);

            for (int i = 0; i < arr1.length; i++) {
                for (int j = 0; j < arr2.length; j++) {
                    if (arr1[i] == arr2[j]) {
                        midArr[h] = arr2[j];
                        h++;
                    }
                }
            }

        System.out.println("Уникальные элементы, встречающиеся в обоих массивах: " + Arrays.toString(midArr));
    }

    static int[] inputArr() {
        System.out.println("\nВведите кол-во элементов нового массива: ");
        int arrLength = waitInt();

        while (arrLength <= 0) {
            System.out.println("Количество элементов должно быть больше нуля.\nПожалуйста, повторите ввод:");
            arrLength = waitInt();
        }

        int[] arr = new int[arrLength];

        for (int i = 0; i < arrLength; i++) {
            System.out.print("arr[" + i + "] = ");
            arr[i] = waitInt();
        }
        return arr;
    }